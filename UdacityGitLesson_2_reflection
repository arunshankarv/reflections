What happens when you initialize a repository? Why do you need to do it?

Initializing a repository creates the files/directories that establish the 
configuration needed for subsequent git commands to work.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It indicates an intermediate area to place data specific to what we want to be 
part of the repository and not any temporary files. It helps unclutter the files 
of interest versus temporary, auto-generated binary files.

How can you use the staging area to make sure you have one commit per logical
change?
Use git add to only stage the specific logical change from the working directory
in preparation of the commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When a critical product milestone is reached and we want to manage change control to avoid impact end users with bugs introduced when major changes are done. Branches help control/group changes into separate spaces without stopping teams from working on the next generation of the product.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
